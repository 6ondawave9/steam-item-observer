{"ast":null,"code":"import services from '@/services/services';\nexport default {\n  data() {\n    return {\n      loginState: 'question',\n      //question, sing_in, sing_up\n      newCode: ''\n    };\n  },\n  methods: {\n    async createUser() {\n      this.newCode = this.randomInt();\n      let resCheck = await services.codeCheck(this.newCode);\n      if (resCheck.data) {\n        console.log(`User created with a code: ${this.newCode}`);\n      } else {\n        console.log(`User was not created, one more attempt`);\n        //this.createUser()\n      }\n    },\n\n    randomInt(min = 10_000, max = 99_999) {\n      let rand = min - 0.5 + Math.random() * (max - min + 1);\n      return Math.round(rand);\n    }\n  }\n};","map":{"version":3,"names":["services","data","loginState","newCode","methods","createUser","randomInt","resCheck","codeCheck","console","log","min","max","rand","Math","random","round"],"sources":["C:\\Users\\seriy\\Desktop\\Разработка\\HTML JS CSS\\Портфолио\\SteamItemObserver\\client\\steam-item-observer-client\\src\\views\\Login.vue"],"sourcesContent":["<template>\n  <div>\n    <button @click=\"loginState='question'\">Назад</button>\n    <div v-if=\"loginState=='question'\">\n        <h2>У Вас есть аккаунт?</h2>\n        <button @click=\"loginState='sing_in'\">Войти</button>\n        <button @click=\"()=>{loginState='sing_up'; createUser()}\">Получить код</button>\n    </div>\n    <div v-if=\"loginState=='sing_in'\">\n        <h2>Введите Ваш код:</h2>\n        <input type=\"text\">\n        <button>Войти</button>\n    </div>\n    <div v-if=\"loginState=='sing_up'\">\n        <h2>Ваш код: <strong>{{ newCode }}</strong></h2>\n    </div>\n  </div>\n</template>\n\n<script>\nimport services from '@/services/services'\nexport default {\n    data() {\n        return {\n            loginState: 'question', //question, sing_in, sing_up\n            newCode: '',\n        }\n    },\n    methods: {\n        async createUser() {\n            this.newCode = this.randomInt()\n            let resCheck = await services.codeCheck(this.newCode)\n            if (resCheck.data){\n                console.log(`User created with a code: ${this.newCode}`)\n            } else {\n                console.log(`User was not created, one more attempt`)\n                //this.createUser()\n            }\n        },\n        randomInt(min = 10_000, max = 99_999) {\n            let rand = min - 0.5 + Math.random() * (max - min + 1);\n            return Math.round(rand);\n        }\n    }\n}\n</script>\n\n<style>\n\n</style>"],"mappings":"AAoBA,OAAOA,QAAO,MAAO,qBAAoB;AACzC,eAAe;EACXC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,UAAU,EAAE,UAAU;MAAE;MACxBC,OAAO,EAAE;IACb;EACJ,CAAC;EACDC,OAAO,EAAE;IACL,MAAMC,UAAUA,CAAA,EAAG;MACf,IAAI,CAACF,OAAM,GAAI,IAAI,CAACG,SAAS,CAAC;MAC9B,IAAIC,QAAO,GAAI,MAAMP,QAAQ,CAACQ,SAAS,CAAC,IAAI,CAACL,OAAO;MACpD,IAAII,QAAQ,CAACN,IAAI,EAAC;QACdQ,OAAO,CAACC,GAAG,CAAE,6BAA4B,IAAI,CAACP,OAAQ,EAAC;MAC3D,OAAO;QACHM,OAAO,CAACC,GAAG,CAAE,wCAAuC;QACpD;MACJ;IACJ,CAAC;;IACDJ,SAASA,CAACK,GAAE,GAAI,MAAM,EAAEC,GAAE,GAAI,MAAM,EAAE;MAClC,IAAIC,IAAG,GAAIF,GAAE,GAAI,GAAE,GAAIG,IAAI,CAACC,MAAM,CAAC,KAAKH,GAAE,GAAID,GAAE,GAAI,CAAC,CAAC;MACtD,OAAOG,IAAI,CAACE,KAAK,CAACH,IAAI,CAAC;IAC3B;EACJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}