{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport services from '@/services/services';\nexport default {\n  data() {\n    return {\n      loader: 'https://i.gifer.com/origin/b4/b4d657e7ef262b88eb5f7ac021edda87.gif',\n      user: '',\n      items: [],\n      imgs: {},\n      newItemName: '',\n      newItemQuality: ''\n    };\n  },\n  methods: {\n    updateSettings(targetId, checked, name, quality) {\n      services.cahngeSettings(this.user, targetId, checked, name, quality);\n    },\n    async deleteItem(name, quality) {\n      let indexOfItemToDelete = this.items.findIndex(el => el.name == name && el.quality == quality);\n      if (indexOfItemToDelete) {\n        this.items.splice(indexOfItemToDelete, 1);\n      }\n      await services.deleteItem(this.user, name, quality);\n      let items = await services.getItems(this.user.code, this.user.tgToken);\n      this.items = items.data;\n    },\n    async addItem(name, quality) {\n      this.newItemName = '';\n      this.newItemQuality = '';\n      this.items.push({\n        actualPrice: 'loading',\n        img: '',\n        lastPrice: 'loading',\n        name: 'loading',\n        notifications: true,\n        quality: 'loading',\n        sendDifInCur: true,\n        sendDifInPer: false,\n        sendEqual: true\n      });\n      await services.addItem(this.user, name, quality);\n      let items = await services.getItems(this.user.code, this.user.tgToken);\n      this.items = items.data;\n    },\n    //Dev\n    test() {\n      services.sendTest();\n    },\n    //Dev\n    exit() {\n      this.$router.push('/');\n    }\n  },\n  async mounted() {\n    this.user = {\n      code: this.$route.query.user,\n      tgToken: this.$route.query.tgToken\n    };\n    let resValidation = await services.tgValidate(this.user.code, this.user.tgToken);\n    if (!resValidation.data) {\n      this.$router.push('/');\n    }\n    let items = await services.getItems(this.user.code, this.user.tgToken);\n    this.items = items.data;\n  }\n};","map":{"version":3,"names":["services","data","loader","user","items","imgs","newItemName","newItemQuality","methods","updateSettings","targetId","checked","name","quality","cahngeSettings","deleteItem","indexOfItemToDelete","findIndex","el","splice","getItems","code","tgToken","addItem","push","actualPrice","img","lastPrice","notifications","sendDifInCur","sendDifInPer","sendEqual","test","sendTest","exit","$router","mounted","$route","query","resValidation","tgValidate"],"sources":["C:\\Users\\seriy\\Desktop\\–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞\\HTML JS CSS\\–ü–æ—Ä—Ç—Ñ–æ–ª–∏–æ\\SteamItemObserver\\client\\src\\views\\Home.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <!-- Dev -->\r\n    <button @click=\"test()\">Send notification</button>\r\n    <!---->\r\n    <button @click=\"exit()\">Exit</button>\r\n    <button @click=\"addItem(newItemName, newItemQuality)\">Add</button>\r\n\r\n    <br>\r\n    <input type=\"text\" v-model=\"newItemName\">\r\n    <select v-model=\"newItemQuality\">\r\n        <option value=\"Factory New\">Factory New</option>\r\n        <option value=\"Minimal Wear\">Minimal Wear</option>\r\n        <option value=\"Field-Tested\">Field-Tested</option>\r\n        <option value=\"Well-Worn\">Well-Worn</option>\r\n        <option value=\"Battle-Scarred\">Battle-Scarred</option>\r\n        <option value=\"\">None</option>\r\n    </select>\r\n\r\n    <h2>Home</h2>\r\n    <img v-if=\"!items.length\" :src=\"loader\">\r\n    <div class=\"item-container\" v-for=\"el in items\" :key=\"el\">\r\n        <div style=\"text-align: center; width: 300px;\">\r\n            <a target=\"_blank\" :href=\"'https://steamcommunity.com/market/listings/730/'+encodeURI(el.quality ? `${el.name} (${el.quality})` : `${el.name}`)\">{{ el.name }} {{ el.quality?'('+el.quality+')':'' }}</a><br>{{el.actualPrice+' —Ä—É–±.' }}\r\n        </div>\r\n            <div style=\"display: flex; align-items: center;\">\r\n            üîî <input :disabled=\"el.name == 'loading'\" class=\"UIKV-switch\" @change=\"(e)=>{updateSettings(e.target.id, e.target.checked, e.target.getAttribute('name'), e.target.getAttribute('quality'))}\" id=\"notifications\" :name=\"el.name\" :quality=\"el.quality\" :checked=\"el.notifications\" type=\"checkbox\">\r\n            ‚öñÔ∏è <input :disabled=\"el.name == 'loading'\" class=\"UIKV-switch\" @change=\"(e)=>{updateSettings(e.target.id, e.target.checked, e.target.getAttribute('name'), e.target.getAttribute('quality'))}\" id=\"sendEqual\" :name=\"el.name\" :quality=\"el.quality\" :checked=\"el.sendEqual\" type=\"checkbox\">\r\n            üí∏ <input :disabled=\"el.name == 'loading'\" class=\"UIKV-switch\" @change=\"(e)=>{updateSettings(e.target.id, e.target.checked, e.target.getAttribute('name'), e.target.getAttribute('quality'))}\" id=\"sendDifInCur\" :name=\"el.name\" :quality=\"el.quality\" :checked=\"el.sendDifInCur\" type=\"checkbox\">\r\n            üìä <input :disabled=\"el.name == 'loading'\" class=\"UIKV-switch\" @change=\"(e)=>{updateSettings(e.target.id, e.target.checked, e.target.getAttribute('name'), e.target.getAttribute('quality'))}\" id=\"sendDifInPer\" :name=\"el.name\" :quality=\"el.quality\" :checked=\"el.sendDifInPer\" type=\"checkbox\">\r\n            <div style=\"cursor: pointer; margin-left: 15px;\" :name=\"el.name\" :quality=\"el.quality\" @click=\"(e)=>{deleteItem(e.target.getAttribute('name'), e.target.getAttribute('quality'))}\">üóëÔ∏è</div>\r\n        </div>\r\n        <div style=\"display: flex; justify-content: center; height: 110px; width: 150px;\"><img style=\"height: 110px;\" :src=\"el.img ? el.img : loader\"></div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport services from '@/services/services'\r\nexport default {\r\n    data() {\r\n        return {\r\n            loader: 'https://i.gifer.com/origin/b4/b4d657e7ef262b88eb5f7ac021edda87.gif',\r\n            user: '',\r\n            items: [],\r\n            imgs: {},\r\n            newItemName: '',\r\n            newItemQuality: ''\r\n        }\r\n    },\r\n    methods: {\r\n        updateSettings(targetId, checked, name, quality) {\r\n            services.cahngeSettings(this.user, targetId, checked, name, quality)\r\n        },\r\n        async deleteItem(name, quality) {\r\n            let indexOfItemToDelete = this.items.findIndex(el => el.name == name && el.quality == quality)\r\n            if (indexOfItemToDelete) {\r\n                this.items.splice(indexOfItemToDelete, 1)\r\n            }\r\n            await services.deleteItem(this.user, name, quality)\r\n            let items = await services.getItems(this.user.code, this.user.tgToken)\r\n            this.items = items.data\r\n        },\r\n        async addItem(name, quality) {\r\n            this.newItemName = ''\r\n            this.newItemQuality = ''\r\n            this.items.push({\r\n                actualPrice: 'loading',\r\n                img: '',\r\n                lastPrice: 'loading',\r\n                name: 'loading',\r\n                notifications: true,\r\n                quality: 'loading',\r\n                sendDifInCur: true,\r\n                sendDifInPer: false,\r\n                sendEqual: true\r\n            })\r\n            await services.addItem(this.user, name, quality)\r\n            let items = await services.getItems(this.user.code, this.user.tgToken)\r\n            this.items = items.data\r\n        },\r\n        //Dev\r\n        test() {\r\n            services.sendTest()\r\n        },\r\n        //Dev\r\n        exit() {\r\n            this.$router.push('/')\r\n        }\r\n    },\r\n    async mounted(){\r\n        this.user = {\r\n            code: this.$route.query.user,\r\n            tgToken: this.$route.query.tgToken\r\n        }\r\n        let resValidation = await services.tgValidate(this.user.code, this.user.tgToken)\r\n        if (!resValidation.data) {\r\n            this.$router.push('/')\r\n        }\r\n        let items = await services.getItems(this.user.code, this.user.tgToken)\r\n        this.items = items.data\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n:root {\r\n    --light-color: #D3E4F2;\r\n    --dark-color: #6B98BD;\r\n}\r\n.UIKV-switch {\r\n    margin-right: 10px;\r\n    -webkit-appearance: none;\r\n    appearance: none;\r\n    width: 35px;\r\n    height: 18px;\r\n    background-color: var(--light-color);\r\n    border-radius: 25px;\r\n    transition: all 0.3s;\r\n    cursor: pointer;\r\n    position: relative;\r\n}\r\n.UIKV-switch::after{\r\n    content: '';\r\n    width: 14px;\r\n    height: 14px;\r\n    border-radius: 50%;\r\n    background-color: #fff;\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 30%;\r\n    transform: translate(-50%, -50%);\r\n    transition: all 0.3s;\r\n\r\n}\r\n.UIKV-switch:checked{\r\n    background: var(--dark-color);\r\n}\r\n.UIKV-switch:checked::after{\r\n    left: 70%;\r\n}\r\n.item-container {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-evenly;\r\n}\r\n@media (max-width: 600px) {\r\n    .item-container {\r\n        flex-wrap: wrap;\r\n        margin-bottom: 16px;\r\n        order: -1;\r\n    }\r\n}\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}