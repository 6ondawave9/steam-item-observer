{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport services from '@/services/services';\nexport default {\n  data() {\n    return {\n      loginState: 'question',\n      //question, sing_in, sing_up\n      newCode: '',\n      codeToLogin: '',\n      tgValidationState: false,\n      tgToken: ''\n    };\n  },\n  methods: {\n    async createUser() {\n      let resCheck = await services.createUser();\n      this.newCode = resCheck.data;\n    },\n    async login() {\n      let resLogin = await services.login(this.codeToLogin);\n      if (resLogin.data) {\n        this.tgValidationState = true;\n      }\n    },\n    async tgValidate() {\n      let resValidation = await services.tgValidate(this.codeToLogin, this.tgToken);\n      if (resValidation.data) {\n        this.$router.push('/home');\n      }\n    }\n  }\n};","map":{"version":3,"names":["services","data","loginState","newCode","codeToLogin","tgValidationState","tgToken","methods","createUser","resCheck","login","resLogin","tgValidate","resValidation","$router","push"],"sources":["C:\\Users\\seriy\\Desktop\\Разработка\\HTML JS CSS\\Портфолио\\SteamItemObserver\\client\\steam-item-observer-client\\src\\views\\Login.vue"],"sourcesContent":["<template>\n  <div>\n    <button v-if=\"loginState!='question'\" @click=\"loginState='question'\">Назад</button>\n\n    <div v-if=\"loginState=='question'\">\n        <h2>У Вас есть аккаунт?</h2>\n        <button @click=\"loginState='sing_in'\">Войти</button>\n        <button @click=\"()=>{loginState='sing_up'; createUser()}\">Получить код</button>\n    </div>\n\n    <div v-if=\"loginState=='sing_in'\">\n        <h2>Введите Ваш код:</h2>\n        <input type=\"text\" v-model=\"codeToLogin\">\n        <button @click=\"login()\">Войти</button>\n\n        <div v-if=\"tgValidationState\">\n            <h2>Введите код от бота:</h2>\n            <input type=\"text\" v-model=\"tgValidationCode\">\n            <button @click=\"tgValidate()\">Войти</button>\n        </div>\n\n    </div>\n\n    <div v-if=\"loginState=='sing_up'\">\n        <h2>Ваш код: <strong>{{ newCode }}</strong></h2>\n        <h2>Напишите боту: /login {{ newCode }} для завершения регистрации</h2>\n    </div>\n  </div>\n</template>\n\n<script>\nimport services from '@/services/services'\nexport default {\n    data() {\n        return {\n            loginState: 'question', //question, sing_in, sing_up\n            newCode: '',\n            codeToLogin: '',\n            tgValidationState: false,\n            tgToken: ''\n        }\n    },\n    methods: {\n        async createUser() {\n            let resCheck = await services.createUser()\n            this.newCode = resCheck.data\n        },\n        async login() {\n            let resLogin = await services.login(this.codeToLogin)\n            if (resLogin.data) {\n                this.tgValidationState = true\n            }\n        },\n        async tgValidate() {\n            let resValidation = await services.tgValidate(this.codeToLogin, this.tgToken)\n            if (resValidation.data) {\n                this.$router.push('/home')\n            }\n        }\n    }\n}\n</script>\n\n<style>\n\n</style>"],"mappings":";AA+BA,OAAOA,QAAO,MAAO,qBAAoB;AACzC,eAAe;EACXC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,UAAU,EAAE,UAAU;MAAE;MACxBC,OAAO,EAAE,EAAE;MACXC,WAAW,EAAE,EAAE;MACfC,iBAAiB,EAAE,KAAK;MACxBC,OAAO,EAAE;IACb;EACJ,CAAC;EACDC,OAAO,EAAE;IACL,MAAMC,UAAUA,CAAA,EAAG;MACf,IAAIC,QAAO,GAAI,MAAMT,QAAQ,CAACQ,UAAU,CAAC;MACzC,IAAI,CAACL,OAAM,GAAIM,QAAQ,CAACR,IAAG;IAC/B,CAAC;IACD,MAAMS,KAAKA,CAAA,EAAG;MACV,IAAIC,QAAO,GAAI,MAAMX,QAAQ,CAACU,KAAK,CAAC,IAAI,CAACN,WAAW;MACpD,IAAIO,QAAQ,CAACV,IAAI,EAAE;QACf,IAAI,CAACI,iBAAgB,GAAI,IAAG;MAChC;IACJ,CAAC;IACD,MAAMO,UAAUA,CAAA,EAAG;MACf,IAAIC,aAAY,GAAI,MAAMb,QAAQ,CAACY,UAAU,CAAC,IAAI,CAACR,WAAW,EAAE,IAAI,CAACE,OAAO;MAC5E,IAAIO,aAAa,CAACZ,IAAI,EAAE;QACpB,IAAI,CAACa,OAAO,CAACC,IAAI,CAAC,OAAO;MAC7B;IACJ;EACJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}