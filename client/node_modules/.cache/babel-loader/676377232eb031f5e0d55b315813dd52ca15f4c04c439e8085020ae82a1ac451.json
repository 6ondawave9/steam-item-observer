{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport services from '@/services/services';\nexport default {\n  data() {\n    return {\n      user: '',\n      items: [],\n      oneMes: false\n    };\n  },\n  methods: {\n    updateSettings(targetId, checked, data) {\n      console.log(targetId, checked, data);\n    }\n  },\n  async mounted() {\n    this.user = {\n      code: this.$route.query.user,\n      tgToken: this.$route.query.tgToken\n    };\n    let resValidation = await services.tgValidate(this.user.code, this.user.tgToken);\n    if (!resValidation.data) {\n      this.$router.push('/');\n    }\n    let items = await services.getItems(this.user.code, this.user.tgToken);\n    this.items = items.data[0];\n    this.oneMes = items.data[1];\n  }\n};","map":{"version":3,"names":["services","data","user","items","oneMes","methods","updateSettings","targetId","checked","console","log","mounted","code","$route","query","tgToken","resValidation","tgValidate","$router","push","getItems"],"sources":["C:\\Users\\seriy\\Desktop\\–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞\\HTML JS CSS\\–ü–æ—Ä—Ç—Ñ–æ–ª–∏–æ\\SteamItemObserver\\client\\steam-item-observer-client\\src\\views\\Home.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h2>Home</h2>\r\n    One mes <input type=\"checkbox\" :checked=\"oneMes\">\r\n    <div style=\"display: flex;\" v-for=\"el in items\" :key=\"el\">\r\n        <div style=\"width: 300px;\">\r\n            {{ el.name }} {{ el.quality?'('+el.quality+')':'' }}\r\n        </div>\r\n        üîî <input id=\"notifications\" :data=\"el.name\" type=\"checkbox\" :checked=\"el.notifications\" @change=\"(e)=>{updateSettings(e.target.id, e.target.checked, e.target.getAttribute('data'))}\">\r\n        ‚öñÔ∏è <input type=\"checkbox\" :checked=\"el.sendEqual\">\r\n        üí∏ <input type=\"checkbox\" :checked=\"el.sendDifInCur\">\r\n        üìä <input type=\"checkbox\" :checked=\"el.sendDifInPer\">\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport services from '@/services/services'\r\nexport default {\r\n    data() {\r\n        return {\r\n            user: '',\r\n            items: [],\r\n            oneMes: false\r\n        }\r\n    },\r\n    methods: {\r\n        updateSettings(targetId, checked, data) {\r\n            console.log(targetId, checked, data)\r\n        }\r\n    },\r\n    async mounted(){\r\n        this.user = {\r\n            code: this.$route.query.user,\r\n            tgToken: this.$route.query.tgToken\r\n        }\r\n        let resValidation = await services.tgValidate(this.user.code, this.user.tgToken)\r\n        if (!resValidation.data) {\r\n            this.$router.push('/')\r\n        }\r\n        let items = await services.getItems(this.user.code, this.user.tgToken)\r\n        this.items = items.data[0]\r\n        this.oneMes = items.data[1]\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>"],"mappings":";AAiBA,OAAOA,QAAO,MAAO,qBAAoB;AACzC,eAAe;EACXC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,IAAI,EAAE,EAAE;MACRC,KAAK,EAAE,EAAE;MACTC,MAAM,EAAE;IACZ;EACJ,CAAC;EACDC,OAAO,EAAE;IACLC,cAAcA,CAACC,QAAQ,EAAEC,OAAO,EAAEP,IAAI,EAAE;MACpCQ,OAAO,CAACC,GAAG,CAACH,QAAQ,EAAEC,OAAO,EAAEP,IAAI;IACvC;EACJ,CAAC;EACD,MAAMU,OAAOA,CAAA,EAAE;IACX,IAAI,CAACT,IAAG,GAAI;MACRU,IAAI,EAAE,IAAI,CAACC,MAAM,CAACC,KAAK,CAACZ,IAAI;MAC5Ba,OAAO,EAAE,IAAI,CAACF,MAAM,CAACC,KAAK,CAACC;IAC/B;IACA,IAAIC,aAAY,GAAI,MAAMhB,QAAQ,CAACiB,UAAU,CAAC,IAAI,CAACf,IAAI,CAACU,IAAI,EAAE,IAAI,CAACV,IAAI,CAACa,OAAO;IAC/E,IAAI,CAACC,aAAa,CAACf,IAAI,EAAE;MACrB,IAAI,CAACiB,OAAO,CAACC,IAAI,CAAC,GAAG;IACzB;IACA,IAAIhB,KAAI,GAAI,MAAMH,QAAQ,CAACoB,QAAQ,CAAC,IAAI,CAAClB,IAAI,CAACU,IAAI,EAAE,IAAI,CAACV,IAAI,CAACa,OAAO;IACrE,IAAI,CAACZ,KAAI,GAAIA,KAAK,CAACF,IAAI,CAAC,CAAC;IACzB,IAAI,CAACG,MAAK,GAAID,KAAK,CAACF,IAAI,CAAC,CAAC;EAC9B;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}