{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 1\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"У Вас есть аккаунт?\", -1 /* HOISTED */);\nconst _hoisted_3 = {\n  key: 2\n};\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Введите Ваш код:\", -1 /* HOISTED */);\nconst _hoisted_5 = {\n  key: 0\n};\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Введите код от бота:\", -1 /* HOISTED */);\nconst _hoisted_7 = {\n  key: 3\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [$data.loginState != 'question' ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 0,\n    onClick: _cache[0] || (_cache[0] = $event => $data.loginState = 'question')\n  }, \"Назад\")) : _createCommentVNode(\"v-if\", true), $data.loginState == 'question' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = $event => $data.loginState = 'sing_in')\n  }, \"Войти\"), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = () => {\n      $data.loginState = 'sing_up';\n      $options.createUser();\n    })\n  }, \"Получить код\")])) : _createCommentVNode(\"v-if\", true), $data.loginState == 'sing_in' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_hoisted_4, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.codeToLogin = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.codeToLogin]]), _createElementVNode(\"button\", {\n    onClick: _cache[4] || (_cache[4] = $event => $options.login())\n  }, \"Войти\"), $data.tgValidation ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [_hoisted_6, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $data.tgValidationCode = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.tgValidationCode]]), _createElementVNode(\"button\", {\n    onClick: _cache[6] || (_cache[6] = $event => $options.tgValidate())\n  }, \"Войти\")])) : _createCommentVNode(\"v-if\", true)])) : _createCommentVNode(\"v-if\", true), $data.loginState == 'sing_up' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, [_createElementVNode(\"h2\", null, [_createTextVNode(\"Ваш код: \"), _createElementVNode(\"strong\", null, _toDisplayString($data.newCode), 1 /* TEXT */)]), _createElementVNode(\"h2\", null, \"Напишите боту: /login \" + _toDisplayString($data.newCode) + \" для завершения регистрации\", 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["_createElementVNode","_createElementBlock","$data","loginState","onClick","_cache","$event","_hoisted_1","_hoisted_2","$options","createUser","_hoisted_3","_hoisted_4","type","codeToLogin","login","tgValidation","_hoisted_5","_hoisted_6","tgValidationCode","tgValidate","_hoisted_7","_toDisplayString","newCode"],"sources":["C:\\Users\\seriy\\Desktop\\Разработка\\HTML JS CSS\\Портфолио\\SteamItemObserver\\client\\steam-item-observer-client\\src\\views\\Login.vue"],"sourcesContent":["<template>\n  <div>\n    <button v-if=\"loginState!='question'\" @click=\"loginState='question'\">Назад</button>\n    <div v-if=\"loginState=='question'\">\n        <h2>У Вас есть аккаунт?</h2>\n        <button @click=\"loginState='sing_in'\">Войти</button>\n        <button @click=\"()=>{loginState='sing_up'; createUser()}\">Получить код</button>\n    </div>\n    <div v-if=\"loginState=='sing_in'\">\n        <h2>Введите Ваш код:</h2>\n        <input type=\"text\" v-model=\"codeToLogin\">\n        <button @click=\"login()\">Войти</button>\n        <div v-if=\"tgValidation\">\n            <h2>Введите код от бота:</h2>\n            <input type=\"text\" v-model=\"tgValidationCode\">\n            <button @click=\"tgValidate()\">Войти</button>\n        </div>\n    </div>\n    <div v-if=\"loginState=='sing_up'\">\n        <h2>Ваш код: <strong>{{ newCode }}</strong></h2>\n        <h2>Напишите боту: /login {{ newCode }} для завершения регистрации</h2>\n    </div>\n  </div>\n</template>\n\n<script>\nimport services from '@/services/services'\nexport default {\n    data() {\n        return {\n            loginState: 'question', //question, sing_in, sing_up\n            newCode: '',\n            codeToLogin: '',\n            tgValidation: false,\n            tgValidationCode: ''\n        }\n    },\n    methods: {\n        async createUser() {\n            let resCheck = await services.createUser()\n            this.newCode = resCheck.data\n        },\n        async login() {\n            let resLogin = await services.login(this.codeToLogin)\n            if (resLogin.data) {\n                this.tgValidation = true\n            }\n        },\n        async tgValidate() {\n            let resValidation = await services.tgValidate(this.codeToLogin, this.tgValidationCode)\n            if (resLogin.data) {\n                this.tgValidation = true\n                //this.$router.push('/home')\n            }\n        }\n    }\n}\n</script>\n\n<style>\n\n</style>"],"mappings":";;;;gCAIQA,mBAAA,CAA4B,YAAxB,qBAAmB;;;;gCAKvBA,mBAAA,CAAyB,YAArB,kBAAgB;;;;gCAIhBA,mBAAA,CAA6B,YAAzB,sBAAoB;;;;;uBAZlCC,mBAAA,CAqBM,cApBUC,KAAA,CAAAC,UAAU,kB,cAAxBF,mBAAA,CAAmF;;IAA5CG,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEJ,KAAA,CAAAC,UAAU;KAAa,OAAK,K,mCAC/DD,KAAA,CAAAC,UAAU,kB,cAArBF,mBAAA,CAIM,OAAAM,UAAA,GAHFC,UAA4B,EAC5BR,mBAAA,CAAoD;IAA3CI,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEJ,KAAA,CAAAC,UAAU;KAAY,OAAK,GAC3CH,mBAAA,CAA+E;IAAtEI,OAAK,EAAAC,MAAA,QAAAA,MAAA;MAAOH,KAAA,CAAAC,UAAU;MAAYM,QAAA,CAAAC,UAAU;IAAA;KAAK,cAAY,E,wCAE/DR,KAAA,CAAAC,UAAU,iB,cAArBF,mBAAA,CASM,OAAAU,UAAA,GARFC,UAAyB,E,gBACzBZ,mBAAA,CAAyC;IAAlCa,IAAI,EAAC,MAAM;+DAAUX,KAAA,CAAAY,WAAW,GAAAR,MAAA;iDAAXJ,KAAA,CAAAY,WAAW,E,GACvCd,mBAAA,CAAuC;IAA9BI,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEG,QAAA,CAAAM,KAAK;KAAI,OAAK,GACnBb,KAAA,CAAAc,YAAY,I,cAAvBf,mBAAA,CAIM,OAAAgB,UAAA,GAHFC,UAA6B,E,gBAC7BlB,mBAAA,CAA8C;IAAvCa,IAAI,EAAC,MAAM;+DAAUX,KAAA,CAAAiB,gBAAgB,GAAAb,MAAA;iDAAhBJ,KAAA,CAAAiB,gBAAgB,E,GAC5CnB,mBAAA,CAA4C;IAAnCI,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEG,QAAA,CAAAW,UAAU;KAAI,OAAK,E,+EAGhClB,KAAA,CAAAC,UAAU,iB,cAArBF,mBAAA,CAGM,OAAAoB,UAAA,GAFFrB,mBAAA,CAAgD,a,iBAA5C,WAAS,GAAAA,mBAAA,CAA8B,gBAAAsB,gBAAA,CAAnBpB,KAAA,CAAAqB,OAAO,iB,GAC/BvB,mBAAA,CAAuE,YAAnE,wBAAsB,GAAAsB,gBAAA,CAAGpB,KAAA,CAAAqB,OAAO,IAAG,6BAA2B,gB"},"metadata":{},"sourceType":"module","externalDependencies":[]}